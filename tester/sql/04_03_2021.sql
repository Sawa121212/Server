-- phpMyAdmin SQL Dump
-- version 5.0.2
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1:3306
-- Время создания: Мар 04 2021 г., 11:48
-- Версия сервера: 8.0.19
-- Версия PHP: 7.3.17

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `accounts`
--
CREATE DATABASE IF NOT EXISTS `accounts` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
USE `accounts`;

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int UNSIGNED NOT NULL,
  `login` varchar(191) DEFAULT NULL,
  `email` varchar(191) DEFAULT NULL,
  `password` varchar(191) DEFAULT NULL,
  `second_name` varchar(50) DEFAULT NULL,
  `first_name` varchar(50) DEFAULT NULL,
  `patronymic` varchar(50) DEFAULT NULL,
  `tabelID` int NOT NULL,
  `usertype` int DEFAULT NULL,
  `uid` varchar(50) NOT NULL,
  `theme` enum('0','1') NOT NULL DEFAULT '0',
  `is_blocked` enum('0','1') NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `login`, `email`, `password`, `second_name`, `first_name`, `patronymic`, `tabelID`, `usertype`, `uid`, `theme`, `is_blocked`) VALUES
(21, 'Sawa121212', 'Sanek22cs@gmail.com', '7a597a6523ae5afcc2bbe2025457083f750a5091', 'Николаев', 'Александр', 'Юрьевич', 302062, 1, 'd442de70cf2ee9db4d07c642221277c9e9bf69f3', '0', '0');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;
--
-- База данных: `id8435427_checkers`
--
CREATE DATABASE IF NOT EXISTS `id8435427_checkers` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
USE `id8435427_checkers`;

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int NOT NULL,
  `name` varchar(50) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `date` date NOT NULL,
  `time` time NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `name`, `date`, `time`) VALUES
(2, 'Саша', '2019-06-30', '10:43:31'),
(3, 'Таня', '2019-07-04', '11:04:45'),
(4, 'Анжелика', '2019-07-04', '13:27:45'),
(5, 'Екатерина', '2019-07-04', '13:27:52'),
(6, 'Екатерина', '2019-07-04', '13:28:06'),
(7, 'Владимир', '2019-07-04', '13:28:10'),
(8, 'Алина', '2019-07-04', '13:28:20'),
(9, 'Татьяна', '2019-07-04', '13:28:29'),
(10, 'Татьяна', '2019-07-04', '13:28:36'),
(11, 'Таня', '2019-07-04', '13:28:43'),
(12, 'Таня', '2019-07-04', '13:28:50'),
(13, 'Екатерина', '2019-07-11', '19:11:42'),
(14, 'Таня', '2019-07-11', '19:12:01'),
(15, 'Таня', '2019-09-12', '09:44:13');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;
--
-- База данных: `id8435427_topusers`
--
CREATE DATABASE IF NOT EXISTS `id8435427_topusers` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
USE `id8435427_topusers`;

-- --------------------------------------------------------

--
-- Структура таблицы `decoders`
--

CREATE TABLE `decoders` (
  `id` int NOT NULL,
  `texts` int NOT NULL,
  `data` date NOT NULL,
  `time` time NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `topkorovkahard`
--

CREATE TABLE `topkorovkahard` (
  `id` int NOT NULL,
  `usernik` varchar(15) NOT NULL,
  `score` int NOT NULL,
  `date` date NOT NULL,
  `time` time NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `topkorovkahard`
--

INSERT INTO `topkorovkahard` (`id`, `usernik`, `score`, `date`, `time`) VALUES
(1, 'Sawa121212', 22, '2018-12-30', '20:45:25'),
(2, 'Sawa121212', 19, '2018-12-30', '20:48:25'),
(3, 'Sawa121213', 15, '2018-12-30', '20:49:25'),
(4, 'Sawa121212', 32, '2018-12-31', '11:30:30'),
(5, 'НиколаевАЮ', 10, '2018-12-31', '21:56:25'),
(6, 'sto', 100, '2019-01-19', '21:42:23'),
(7, 'НиколаевАЮ', 7, '2019-06-28', '06:58:32'),
(8, 'БОГ', 4, '2019-06-28', '07:01:42');

-- --------------------------------------------------------

--
-- Структура таблицы `topkorovkalite`
--

CREATE TABLE `topkorovkalite` (
  `id` int NOT NULL,
  `usernik` varchar(15) NOT NULL,
  `score` int NOT NULL,
  `date` date NOT NULL,
  `time` time NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `topkorovkalite`
--

INSERT INTO `topkorovkalite` (`id`, `usernik`, `score`, `date`, `time`) VALUES
(1, 'Sawa121212', 52, '2018-12-30', '20:45:25'),
(2, 'Sawa121212', 69, '2018-12-30', '20:48:25'),
(3, 'Sawa121212', 49, '2018-12-30', '20:49:25'),
(4, 'Sawa121212', 32, '2018-12-31', '11:30:30'),
(5, 'НиколаевАЮ', 7, '2018-12-31', '21:56:25'),
(6, 'farfan', 55, '2019-01-18', '20:52:12'),
(7, 'farfan', 59, '2019-01-18', '21:14:17'),
(8, 'Saaa', 122, '2019-01-18', '21:26:11'),
(9, 'Saaa', 101, '2019-01-18', '21:26:22'),
(10, 'tyt_i_tam', 78, '2019-01-18', '21:27:35'),
(11, 'taram', 44, '2019-01-18', '21:27:35'),
(12, 'tyt_i_tam', 78, '2019-01-18', '21:27:35'),
(13, 'neamae', 54, '2019-01-18', '21:27:35'),
(14, 'joy', 31, '2019-01-18', '21:43:57'),
(15, 'joy2', 32, '2019-01-18', '21:47:32'),
(16, 'joy3', 33, '2019-01-18', '21:48:01'),
(17, 'sto', 100, '2019-01-19', '20:57:24'),
(18, 'sto+2', 102, '2019-01-19', '21:06:58'),
(19, 'миша', 9, '2019-01-20', '14:04:39'),
(20, 'Саша', 7, '2019-02-06', '11:15:24'),
(21, 'Саша', 8, '2019-02-06', '11:23:56'),
(22, 'Саша', 5, '2019-02-06', '11:27:40'),
(23, 'Tarakan', 5, '2019-06-28', '06:42:21');

-- --------------------------------------------------------

--
-- Структура таблицы `toppyatnaski`
--

CREATE TABLE `toppyatnaski` (
  `id` int NOT NULL,
  `usernik` varchar(15) NOT NULL,
  `score` int NOT NULL,
  `date` date NOT NULL,
  `time` time NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `toppyatnaski`
--

INSERT INTO `toppyatnaski` (`id`, `usernik`, `score`, `date`, `time`) VALUES
(1, 'sto', 100, '2019-01-20', '10:45:25'),
(2, 'sto+2', 102, '2019-01-20', '12:00:56'),
(3, 'Sawa121212', 103, '2019-01-20', '12:05:19'),
(4, 'qwe', 104, '2019-01-22', '10:38:18'),
(5, 'mR.viRUS21', 251, '2019-06-28', '06:10:20'),
(6, 'avocato', 279, '2020-02-28', '12:12:14');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `decoders`
--
ALTER TABLE `decoders`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `topkorovkahard`
--
ALTER TABLE `topkorovkahard`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `topkorovkalite`
--
ALTER TABLE `topkorovkalite`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `toppyatnaski`
--
ALTER TABLE `toppyatnaski`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `decoders`
--
ALTER TABLE `decoders`
  MODIFY `id` int NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `topkorovkahard`
--
ALTER TABLE `topkorovkahard`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT для таблицы `topkorovkalite`
--
ALTER TABLE `topkorovkalite`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=24;

--
-- AUTO_INCREMENT для таблицы `toppyatnaski`
--
ALTER TABLE `toppyatnaski`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;
--
-- База данных: `tables`
--
CREATE DATABASE IF NOT EXISTS `tables` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
USE `tables`;

-- --------------------------------------------------------

--
-- Структура таблицы `list`
--

CREATE TABLE `list` (
  `id` int NOT NULL,
  `name` varchar(200) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `creator` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `table_ID` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  `date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `private` enum('true','false') COLLATE utf8_unicode_ci NOT NULL,
  `private_users` varchar(1000) CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  `del` enum('true','false') COLLATE utf8_unicode_ci NOT NULL DEFAULT 'false',
  `is_start` enum('true','false') COLLATE utf8_unicode_ci NOT NULL DEFAULT 'false',
  `is_blocked` enum('true','false') COLLATE utf8_unicode_ci NOT NULL DEFAULT 'false'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `list`
--

INSERT INTO `list` (`id`, `name`, `creator`, `table_ID`, `date`, `private`, `private_users`, `del`, `is_start`, `is_blocked`) VALUES
(1, 'Тест по C#', 'd442de70cf2ee9db4d07c642221277c9e9bf69f3', 'quest_csharp', '2021-01-25 16:45:32', 'false', NULL, 'false', 'true', 'false'),
(20, 'Тест по АСУ ТП', 'd442de70cf2ee9db4d07c642221277c9e9bf69f3', 'quest_06e7f80ea22d9fab19566fac380defe7c9aba9ab', '2021-02-04 15:52:28', 'false', NULL, 'false', 'true', 'false'),
(21, 'Тест по встраиваемым системам', 'd442de70cf2ee9db4d07c642221277c9e9bf69f3', 'quest_0cde0cef16bebfeb05386e593dd3f3bb8e12ae4a', '2021-02-04 16:07:44', 'false', NULL, 'false', 'true', 'false'),
(22, 'Тест по конструированию программного обеспечения', 'd442de70cf2ee9db4d07c642221277c9e9bf69f3', 'quest_656d7bbadc0bfd839277a4e30f7e3b37a7b520f1', '2021-02-04 16:23:40', 'false', NULL, 'false', 'true', 'false'),
(23, 'Тест по разработке и анализу требований', 'd442de70cf2ee9db4d07c642221277c9e9bf69f3', 'quest_c6e989c4f27eee03bca7a81482b37ffcccb7fdcd', '2021-02-04 16:33:53', 'false', NULL, 'false', 'true', 'false'),
(24, 'Тест по тестированию программного обеспечения', 'd442de70cf2ee9db4d07c642221277c9e9bf69f3', 'quest_a9b80079c385951b21c1c5c6de24f0252d2417e5', '2021-02-05 08:57:24', 'false', NULL, 'false', 'true', 'false'),
(25, 'Тест по управлению программными проектами', 'd442de70cf2ee9db4d07c642221277c9e9bf69f3', 'quest_f1b0a72eb7d8f95e35c442375a96d7457b642cc9', '2021-02-05 09:05:31', 'false', NULL, 'false', 'true', 'false'),
(29, 'test2', 'd442de70cf2ee9db4d07c642221277c9e9bf69f3', 'quest_6bb09cdfe8f95a2d190e3afaf376c17310ab0842', '2021-02-11 11:19:25', 'false', NULL, 'false', 'true', 'false');

-- --------------------------------------------------------

--
-- Структура таблицы `news`
--

CREATE TABLE `news` (
  `id` int NOT NULL,
  `header` varchar(50) NOT NULL,
  `text` varchar(500) NOT NULL,
  `date` timestamp NOT NULL,
  `mode` enum('info','warning','error') NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Дамп данных таблицы `news`
--

INSERT INTO `news` (`id`, `header`, `text`, `date`, `mode`) VALUES
(1, 'zag', 'text', '2021-02-03 13:44:15', 'warning'),
(2, 'zaf', 'ttt', '2021-02-03 13:45:15', 'error');

-- --------------------------------------------------------

--
-- Структура таблицы `quest_0cde0cef16bebfeb05386e593dd3f3bb8e12ae4a`
--

CREATE TABLE `quest_0cde0cef16bebfeb05386e593dd3f3bb8e12ae4a` (
  `id` int NOT NULL,
  `question` varchar(300) DEFAULT NULL,
  `answers` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `apply` varchar(500) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Дамп данных таблицы `quest_0cde0cef16bebfeb05386e593dd3f3bb8e12ae4a`
--

INSERT INTO `quest_0cde0cef16bebfeb05386e593dd3f3bb8e12ae4a` (`id`, `question`, `answers`, `apply`) VALUES
(1, 'Какой программный интерфейс используется в сетях Ethernet для приема/передачи данных, имеющих нестандартный формат (кадры SV, PTP, Goose)?', '1.	UDP-сокет\r\n2.	RAW-сокет\r\n3.	Pipe\r\n4.	Семафор', '2'),
(2, 'Выберите неправильное утверждение: Операционная система «мягкого» реального времени:', '1.	В среднем случае обеспечивает процесс временем для его выполнения.\r\n2.	Не должна опаздывать с реакцией на событие, но данное допускается.\r\n3.	Позволяет предотвратить потерю актуальности результатов, большие финансовые потери, аварии и катастрофы.\r\n4.	Соблюдает временные ограничения, однако выход за их пределы считается снижением производительности\r\n', '4'),
(3, 'Какой из примитивов операционной системы не используется для передачи данных между процессами?', '1.	Мьютексы (mutex)\r\n2.	Нити (pipe)\r\n3.	Почтовые ящики (mailbox)\r\n4.	Очереди сообщений (message queue)', '2'),
(5, 'Выберите лишнее: Для получения доступа к разделяемому ресурсу используется:', '1.	Запрещение прерываний\r\n2.	Запрещение работы планировщика\r\n3.	Запросы к очереди данных\r\n4.	Проверка и установка условной переменной', '3'),
(6, 'Для чего применяется механизм сторожевого таймера?', '1.	Для наблюдения утечек динамически выделяемой памяти.\r\n2.	Для контроля над зависанием работающей системы/процесса.\r\n3.	Для обработки прерываний, согласно заданному времени таймера.\r\n4.	Для  перезагрузки выполняемой программы по требованию системы', '2'),
(7, 'Для каких целей производителями разработаны рекомендации по программированию на языке С? (MISRA 2004, Embedded C Coding Standard etc)?', '1.	Рекомендации по программированию на языке С разработаны как совокупность лучших практик программирования и уменьшения количества программных ошибок и уязвимостей во встраиваемом ПО;\r\n2.	Рекомендации по программированию на языке С разработаны для разработки удобочитаемого кода и внедрения в корпоративную этику;\r\n3.	Рекомендации по программированию на языке С разработаны для облегчения разработки архитектуры ПО с увеличением эффективности его последующего тестирования;\r\n4.	Рекомендации по программирования на языке С разработаны для упрощения процесса программирования встраиваемого ПО для микроконтроллеров с учетом особенностей работы периферии;\r\n', '1'),
(8, 'В чем разница между аппаратным и программным прерыванием?', '1.	Источником аппаратного прерывания являются внешние  периферийные устройства, программного - специальная инструкция в коде программы;\r\n2.	Аппаратное прерывание обрабатывается специальной аппаратурой, программное - специальной программой;\r\n3.	Аппаратное прерывание требует участия пользователя, программное - нет;\r\n4.	Аппаратное прерывание возникает только в ЦПУ, программное - только в ОС.', '1'),
(9, 'Что такое кросс-компилятор?', '1.	Кросс-компилятор это ПО, которое производит исполняемый код для платформы, отличной от той, на которой работает он сам;\r\n2.	Кросс-компилятор это ПО, которое производит линковку раннее скомпилированного исходного кода;\r\n3.	Кросс-компилятор это ПО, которое производит не только код для платформы, но и отлаживает его;\r\n4.	Кросс-компилятор это ПО, которое во время компиляции считывает параметры платформы для генерации оптимального кода.\r\n', '1'),
(10, 'Что такое ETB?', '1.	Это дескриптор ограниченной специально назначаемой области памяти, которая хранит информациию о выполнении встроенного ПО;\r\n2.	Это дескриптор области памяти, которая хранит информацию о выполнении встроенного ПО и имеет размер всей доступной памяти;\r\n3.	Это циклический буфер, встроенный в чип, который хранит указатели на сегменты памяти, которые хранят информацию о выполнении встроенного ПО; \r\n4.	Это небольшой циклический буфер, встроенный в чип, который хранит информацию о выполнении встроенного ПО.\r\n', '4'),
(11, 'Чем отличается EABI от ABI?', '1.	оптимизацией вычислительной точности;\r\n2.	оптимизацией производительности в рамках ограниченных ресурсов встроенной системы;\r\n3.	оптимизацией скорости выполнения в отличие от ABI;\r\n4.	оптимизацией размеров занимаемой памяти.', '4'),
(12, 'Что такое периферия?', '1.	вспомогательная аппаратура, служащая для обработки асинхронных прерываний; \r\n2.	вспомогательная аппаратура, позволяющая вводить/выводить информацию в/из процессора; (Процессор, ага)\r\n3.	совокупность электрических элементов, проводников и разъемов процессора;\r\n4.	набор инструкций и правил для передачи процессору из ROM.', '2'),
(13, 'Что такое big-endian и little-endian?', '1.	семейство микропроцессоров IBM конца 80 годов;\r\n2.	условное название работы микропроцессора в режиме высокой производительности и низкой производительности; \r\n3.	порядок хранения байт в процессоре;\r\n4.	условное название работы микропроцессора в режиме высокого энергопотребления и низкого энергопотребления;\r\n', '3'),
(14, 'Что такое драйвер?', '1.	программный модуль, обрабатывающий программные прерывания;\r\n2.	программный модуль, обрабатывающий аппаратные прерывания;\r\n3.	программный модуль, распределяющий прерывания в ОС;\r\n4.	программный модуль, встраиваемый в ОС, предоставляющий интерфейс для работы с аппаратурой.\r\n', '4'),
(15, 'Что такое ОС?', '1.	комплекс взаимосвязанных программ, предназначенных для управления ресурсами компьютера;\r\n2.	комплекс взаимосвязанных программ, предназначенных для офисной работы;\r\n3.	комплекс взаимосвязанных программ, предназначенных для разработки графических интерфейсов.\r\n', '1'),
(16, 'Что такое эмулятор ЭВМ?', '1.	микропроцессор, являющийся копией оригинального микропроцессора, но с ограниченным набором команд; \r\n2.	комплекс программно-аппаратных средств, предназначенных для имитации функций вычислительной системы;\r\n3.	комплекс программных средств, предназначенных для выполнения на целевой платформе;\r\n4.	комплекс аппаратных средств, предназначенных для подмены целевого микропроцессора.\r\n', '2'),
(17, 'Что такое встраиваемая система?', '1.	специализированная микропроцессорная система управления со встраиваемыми непосредственно в устройство, которым она управляет датчиками контроля и мониторинга;\r\n2.	специализированная микропроцессорная система встраиваемая в систему управления, контроля и мониторинга для работы в условиях ограниченных ресурсов;\r\n3.	микропроцессорная система специализированного назначения для управления, контроля и мониторинга, концепция разработки которой заключается в том, что такая система будет работать, будучи встроенной непосредственно в устройство, которым она управляет;\r\n4.	микропроцессорная система специализированного назначения для управления, контроля и мониторинга процессов, концепция разработки которой заключается в том, что такая система будет работать независимо от числа управленческих каналов встроенных в систему.\r\n', '3'),
(18, 'Какой ассемблерной инструкции не существует для архитектуры ARM?', '1.	movw\r\n2.	movt\r\n3.	movz\r\n4.	movf', '4'),
(19, 'Особенности встраиваемых систем разрабатываемых для РЗА', '1.	управление электроприводом, измерение тока в обмотках двигателя\r\n2.	управление реле, прием и обработка аналоговых и дискретных сигналов\r\n3.	управление генератором тока, измерение выдаваемой мощности\r\n4.	управление подачей энергии потребителю\r\n', '4'),
(20, 'Что такое микрокод процессора?', '1.	программа размером менее 1кБайта\r\n2.	программа, реализующая набор инструкций процессора\r\n3.	программа малого размера, выполняющаяся на ограниченных ресурсах\r\n4.	программа обработки аппаратного прерывания.', '2'),
(21, 'В чем разница между микропроцессором и микроконтроллером?', '1.	микроконтроллер не имеет возможности подключения внешней памяти\r\n2.	микроконтроллер самодостаточен с точки зрения вычислительной мощности\r\n3.	микроконтроллер самодостаточен с точки зрения объемов ПЗУ и ОЗУ\r\n4.	микропроцессор не имеет на борту арифметико-логическое устройство.', '3'),
(22, 'Что такое DMA?', '1.	технология умножения чисел с промежуточным хранением в аккумуляторе\r\n2.	технология двойного буферизированного массива для взаимодействия центрального процессора с внешней памятью\r\n3.	технология прямого доступа к памяти, минуя центральный процессор\r\n4.	технология прямого доступа к регистрам процессора, минуя кэш память.', '3'),
(23, 'Интерфейс UART что из себя представляет?', '1.	последовательная асимметричная шина для связи между интегральными схемами внутри электронных приборов. Использует две двунаправленные линии связи (SDA и SCL), имеет тактовый сигнал на выводе SCL\r\n2.	универсальный асинхронный приёмопередатчик предназначенный для организации связи с другими цифровыми устройствами. Не имеет тактового сигнала.\r\n3.	двунаправленная шина связи для устройств с низкоскоростной передачей данных (обычно 15,4 Кбит/с, максимум 125 Кбит/с в режиме overdrive), в которой данные передаются по цепи питания (то есть всего используются два провода — один общий (GND), а второй для питания и данных; в некоторых случаях используют и отдельный провод питания)\r\n4.	универсальный синхронный приемопередатчик со скоростями передачи данных до 10Гбит/с.\r\n', '1'),
(24, 'Какая из характеристик не относится к интерфейсу SPI?', '1.	serial clock rate\r\n2.	clock polarity and phase\r\n3.	data integrity check interval\r\n4.	master or slave.', '3'),
(25, 'Что такое BootLoader, для чего предназначен?', '1.	прикладное программное обеспечение, обеспечивающее загрузку программы из любого места в любой момент времени после включения питания\r\n2.	прикладное программное обеспечение, обеспечивающее загрузку программы из определенного места в любой момент времени после включения питания\r\n3.	системное программное обеспечение, обеспечивающее загрузку программы из определенного места непосредственно после включения питания\r\n4.	системное программное обеспечение, обеспечивающее выгрузку программы в определенное место по сигналу прерывания\r\n', '3'),
(26, 'Что такое система реального времени?', '1.	система, которая должна реагировать на события во внешней по отношению к системе среде или воздействовать на среду в рамках абсолютных временных ограничений\r\n2.	система, которая должна реагировать на события во внешней по отношению к системе среде или воздействовать на среду в рамках относительных временных ограничений\r\n3.	система, которая должна реагировать на события во внешней по отношению к системе среде или воздействовать на среду в рамках требуемых временных ограничений\r\n4.	система, которая должна реагировать на события во внешней по отношению к системе среде или воздействовать на среду в рамках очень жестких временных ограничений.\r\n', '3'),
(27, 'Выберите негативное последствие использования динамического выделения памяти во встраиваемом ПО реального времени.', '1.	отсутствие возможности восстановления данных при сбое\r\n2.	периодическая нехватка памяти при динамических нагрузках\r\n3.	не детерминированное время работы программы при выделении памяти\r\n4.	выход программы в любой момент времени по прерыванию HardFault.', '3'),
(28, 'Какое из аббревиатур подходит для описания связки CPU + DSP на одном кристалле?', '1.	SOIC\r\n2.	SOM\r\n3.	IPC\r\n4.	SOC.', '4'),
(29, 'В чем особенность архитектуры Фон-Неймана (Пристонская архитектура)?', '1.	раздельное хранение команд и данных в памяти компьютера\r\n2.	совместное хранения команд и данных в памяти компьютера\r\n3.	совместное хранение данных команд в памяти компьютера\r\n4.	раздельное хранение данных команд в памяти компьютера.', '2'),
(30, 'В чем особенность Гарвардской архитектуры микропроцессорных систем?', '1.	раздельное хранение команд и данных в памяти компьютера\r\n2.	совместное хранения команд и данных в памяти компьютера\r\n3.	совместное хранение данных команд в памяти компьютера\r\n4.	раздельное хранение данных команд в памяти компьютера.', '1'),
(31, 'Выберите несуществующий вид адресации в электронно-вычислительной системе?', '1.	Непосредственная\r\n2.	Косвенная\r\n3.	Регистровая\r\n4.	Константная. \r\n', '4');

-- --------------------------------------------------------

--
-- Структура таблицы `quest_06e7f80ea22d9fab19566fac380defe7c9aba9ab`
--

CREATE TABLE `quest_06e7f80ea22d9fab19566fac380defe7c9aba9ab` (
  `id` int NOT NULL,
  `question` varchar(300) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `answers` varchar(500) DEFAULT NULL,
  `apply` varchar(500) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Дамп данных таблицы `quest_06e7f80ea22d9fab19566fac380defe7c9aba9ab`
--

INSERT INTO `quest_06e7f80ea22d9fab19566fac380defe7c9aba9ab` (`id`, `question`, `answers`, `apply`) VALUES
(1, 'Как называется топология сети, при которой все устройства подключаются к центральному узлу:', '1.	Топология звезда.\r\n2.	Кольцевая топология.\r\n3.	Топология с общей шиной.\r\n4.	Полносвязная топология.', '1'),
(2, 'Название модели OSI расшифровывается, как:', '1.	Модель взаимодействия открытых систем.\r\n2.	Модель открытых сетей.\r\n3.	Модель взаимодействия сетей друг с другом.', '1'),
(3, 'На каком уровне модели OSI обрабатываются IP-адреса:', '1.	Физический.\r\n2.	Канальный.\r\n3.	Сетевой.\r\n4.	Транспортный.', '3'),
(5, 'Какой из следующих протоколов относится к протоколам синхронизации времени:', '1.	PRP.\r\n2.	HSR.\r\n3.	NTP.\r\n4.	RSTP.', '3'),
(6, ' Что такое ПЛК и его функции:', '1.	Промышленный логический контроллер – управление промышленными процессами;\r\n2.	Программируемый логический контроллер – программирование устройств автоматики и микроконтроллеров;\r\n3.	Программирующий логический контроллер – управление технологическими процессами;\r\n4.	Программируемый логический контроллер – управление технологическими процессами;\r\n5.	Программируемый логический контроллер – сбор данных технологического процесса.', '4'),
(7, 'Расшифруйте аббревиатуру АСУ ТП:', '1.	Автоматическая система управления технологическим процессом.\r\n2.	Автоматизированная система управления техническим процессом.\r\n3.	Автоматизированная система управления технологическим процессом.\r\n4.	Автоматическая система управления техническим процессом.\r\n', '3'),
(8, 'Что не относится к компонентам АСУ ТП:', '1.	Технологический объект управления.\r\n2.	Оперативный персонал.\r\n3.	Программное обеспечение.\r\n4.	Информационное обеспечение.\r\n5.	Нет верного ответа.', '5'),
(9, 'Вспомогательные функций АСУ ТП это:', '1.	Контроль функционирования программных и технических средств.\r\n2.	Контроль поступающей информации.\r\n3.	Осуществление управляющих воздействий.\r\n4.	Ведение журнала аварий.', '1'),
(10, 'Подтверждение факта получения сообщения в АСУ ТП называется:', '1.	Сигнализацией.\r\n2.	Печатью.\r\n3.	Событием.\r\n4.	Квитированием.\r\n5.	Предупреждением.', '4'),
(11, 'Специализированный сетевой компьютер, имеющий минимум один сетевой интерфейс и пересылающий пакеты данных между различными сегментами сети, принимающий решения о пересылке на основании информации о топологии сети и определённых правил, заданных администратором - это:', '1.	Коммутатор.\r\n2.	Маршрутизатор.\r\n3.	Концентратор.', '2'),
(12, 'Какое особое состояние не предполагает немедленной реакции оператора?', '1.	Тревоги.\r\n2.	События.\r\n3.	Сигнализация.', '2'),
(13, 'Определите функции АСУ ТП:', '1.	Сбор, передача, обработка, представление и хранение информации.\r\n2.	Сбор информации и формирование управляющих воздействий.\r\n3.	Сбор, обработки и представления информации, и выработки и реализации управляющих воздействий на технологический объект управления.\r\n', '3'),
(14, 'Что не относится к отличительным чертам цифровых подстанций по сравнению с традиционными подстанциями:', '1.	Широкое внедрение цифровых интерфейсов взамен аналоговых.\r\n2.	Отказ от медных кабельных связей.\r\n3.	Использование серии стандартов МЭК 61850.\r\n4.	Использование устройств РЗА.\r\n5.	Все вышеперечисленные пункты.', '4'),
(15, 'Чем коммутатор отличается от концентратора?:', '1.	Концентраторы сжимают (концентрируют) проходящий через них трафик.\r\n2.	Концентраторы имеют таблицу коммутации, запоминая IP адреса всех проходящих кадров.\r\n3.	Коммутаторы и концентраторы - это одно и то же.\r\n4.	Коммутаторы хранят внутреннюю таблицу коммутации и передают пакет на тот порт, на котором находится MAC назначения.\r\n', '4'),
(16, 'Что означает термин шлюз по умолчанию?:', '1.	Адрес входного интерфейса маршрутизатора, через который все пакеты из локальной сети передаются в удаленные сети. \r\n2.	Адрес выходного интерфейса маршрутизатора, через который все пакеты из маршрутизатора передаются в удаленные сети. \r\n3.	Это последовательный интерфейс маршрутизатора, через который все пакеты из маршрутизатора передаются в удаленные сети.\r\n4.	Адрес входного интерфейса соседнего маршрутизатора, через который все пакеты из маршрутизатора передаются в сеть назначения. \r\n', '1'),
(17, 'Широковещательные пакеты передаются:', '1.	Всем хостам сети, подключенным к lan-интерфейсам. \r\n2.	Всем хостам сети, подключенным ко всем интерфейсам маршрутизатора или коммутатора. \r\n3.	Всем хостам в сети, определяемой маской подсети.\r\n4.	Всем хостам сети, которые доступны со всех интерфейсов маршрутизатора.', '3'),
(18, 'Сетевой протокол, позволяющий сетевым устройствам автоматически получать IP-адрес и другие параметры, необходимые для работы в сети TCP/IP:', '1.	DHCP.\r\n2.	HDCP.\r\n3.	TCP.\r\n4.	HTTP.', '1'),
(19, 'Какой из следующих протоколов передачи данных не является клиент-серверным:', '1.	Modbus TCP\r\n2.	Modbus RTU.\r\n3.	МЭК 61850-8-1 (MMS).\r\n4.	МЭК 61850-8-1 (GOOSE).', '4'),
(20, 'Как переводится аббревиатура SCADA-система:', '1.	Диспетчерское управление и сбор данных.\r\n2.	Дистанционное управление и сбор данных.', '1'),
(21, 'Какие требования не предъявляются к SCADA-системам:', '1.	Надёжность системы (технологическая и функциональная).\r\n2.	Безопасность управления.\r\n3.	Точность обработки и представления данных.\r\n4.	Нет верного ответа.', '4'),
(22, 'Выберите правильную последовательность уровней АСУ ТП («сверху вниз»):', '1.	Присоединения, станционный, первичного оборудования.\r\n2.	Станционный, присоединения, первичного оборудования.\r\n3.	Станционный, первичного оборудования, присоединения.\r\n4.	Первичного оборудования, присоединения, станционный. \r\n5.	Первичного оборудования, станционный, присоединения.', '2'),
(23, 'Наука об управлении и контроле на расстоянии с передачей (по каналу связи) кодированных электрических или радиосигналов, несущих управляющую информацию или данные о состоянии контролируемого объекта – это:', '1.	Телеуправление.\r\n2.	Телесигнализация. \r\n3.	Телеизмерение. \r\n4.	Телемеханика.\r\n5.	Диспетчеризация.', '4'),
(24, 'Получение информации о состоянии контролируемых и управляемых объектов, имеющих ряд возможных дискретных состояний методами и средствами телемеханики – это:', '1.	Телеуправление.\r\n2.	Телесигнализация. \r\n3.	Телеизмерение. \r\n4.	Телемеханика.\r\n5.	Диспетчеризация.', '2'),
(25, 'Что такое \"интерфейс\"?:', '1.	Набор правил взаимодействия между двумя независимыми объектами\r\n2.	Возможные способы соединения объектов.\r\n3.	Передача информации между источником и приёмником с помощью операций чтения и записи.\r\n', '1'),
(26, 'Как называется передача данных по схеме «от одного ко всем»:', '1.	Unicast.\r\n2.	Multicast.\r\n3.	Broadcast.\r\n4.	Anycast.', '3'),
(27, 'Позволяет использовать цифровую связь между электронными трансформаторами тока/напряжения или объединяющими устройствами и устройствами присоединения:', '1.	Шина процесса.\r\n2.	Шина подстанции.\r\n3.	Шина присоединения.', '1'),
(28, 'Какая технология применяется для деления физической сети на логические сегменты:', '1.	MAC.\r\n2.	APPID.\r\n3.	LAN.\r\n4.	VLAN.', '4'),
(29, 'К какому уровню АСУ ТП относится устройство синхронизации времени:', '1.	Уровень присоединения.\r\n2.	Уровень станции.\r\n3.	Уровень первичного оборудования.', '2'),
(30, 'Человека,  управляющего автоматизированной системой, называют:', '1.	оператором\r\n2.	программистом\r\n3.	рабочим.', '1');

-- --------------------------------------------------------

--
-- Структура таблицы `quest_6bb09cdfe8f95a2d190e3afaf376c17310ab0842`
--

CREATE TABLE `quest_6bb09cdfe8f95a2d190e3afaf376c17310ab0842` (
  `id` int NOT NULL,
  `question` varchar(300) DEFAULT NULL,
  `answers` varchar(1000) DEFAULT NULL,
  `apply` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `quest_656d7bbadc0bfd839277a4e30f7e3b37a7b520f1`
--

CREATE TABLE `quest_656d7bbadc0bfd839277a4e30f7e3b37a7b520f1` (
  `id` int NOT NULL,
  `question` varchar(300) DEFAULT NULL,
  `answers` varchar(1000) DEFAULT NULL,
  `apply` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Дамп данных таблицы `quest_656d7bbadc0bfd839277a4e30f7e3b37a7b520f1`
--

INSERT INTO `quest_656d7bbadc0bfd839277a4e30f7e3b37a7b520f1` (`id`, `question`, `answers`, `apply`) VALUES
(1, 'Жизненный цикл ПО – это период времени, который:', '1.	Начинается с момента начала проектирования и заканчивается внедрением ПО.\r\n2.	Начинается с выработки требований к ПО и заканчивается внедрением ПО.\r\n3.	Начинается с момента принятия решения о необходимости создания ПО и заканчивается его внедрением.\r\n4.	Начинается с момента принятия решения о необходимости создания ПО и заканчивается в момент его полного изъятия из эксплуатации.\r\n5.	Начинается с выработки требований к ПО и заканчивается в момент полного изъятия ПО эксплуатации.\r\n', '4'),
(2, 'Выберите вариант, в котором не нарушена последовательность фаз жизненного цикла ПО:', '1.	Проектирование, Реализация, Тестирование, Анализ, Внедрение, Эксплуатация\r\n2.	Анализ, Проектирование, Реализация, Тестирование, Внедрение, Эксплуатация\r\n3.	Проектирование, Тестирование, Внедрение, Эксплуатация, Анализ, Реализация\r\n4.	Проектирование, Тестирование, Реализация, Анализ, Внедрение, Эксплуатация\r\n', '2'),
(3, 'Выберите модель жизненного цикла ПО, которая НЕ предусматривает регулярное повторение фаз жизненного цикла:', '1.	Каскадная (водопадная)\r\n2.	Спиральная\r\n3.	Инкрементная', '1'),
(4, 'На какой фазе жизненного цикла ПО возникает больше всего ошибок?', '1.	Анализ\r\n2.	Проектирование\r\n3.	Реализация', '3'),
(5, 'На какой фазе жизненного цикла ПО возникают ошибки, затраты на устранение которых наибольшие?', '1.	Анализ\r\n2.	Проектирование\r\n3.	Реализация', '1'),
(6, 'Существует 2 характеристики зависимостей модуля: внутренняя (связность модуля, cohesion) и внешняя (сцепление модулей, coupling). Выберите правильное утверждение:', '1.	Обе характеристики желательно увеличивать.\r\n2.	Обе характеристики желательно уменьшать.\r\n3.	Связность модуля желательно уменьшать, а сцепление модулей желательно увеличивать.\r\n4.	Связность модуля желательно увеличивать, а сцепление модулей желательно уменьшать.\r\n', '4'),
(7, 'В каком случае внешняя связь модулей (сцепление, coupling) выше (сильнее)?', '1.	Входной параметр вызываемого модуля — простой (скалярный) элемент данных.\r\n2.	Входной параметр вызываемого модуля — структура данных.\r\n', '2'),
(8, 'В каком случае внутренняя связь модулей (связность, cohesion) выше (сильнее)?', '1.	Входные данные одного модуля = выходные данные другого.\r\n2.	Модули используют одни и те же входные данные.', '1'),
(9, 'Выберите вариант, в котором правильно перечислены достоинства модульного программирования:', '1.	Упрощается разработка требований к ПО, удешевляется эксплуатация ПО, уменьшаются накладные расходы на вызовы процедур.\r\n2.	Упрощается написание исходного кода, удешевляется сопровождение ПО, работу по написанию исходного кода можно распараллелить между несколькими программистами.\r\n3.	Удешевляется эксплуатация ПО, упрощается написание исходного кода, упрощается разработка требований к ПО.\r\n4.	Удешевляется сопровождение ПО, уменьшаются накладные расходы на вызовы процедур, удешевляется эксплуатация ПО.\r\n5.	Работу по написанию исходного кода можно распараллелить между несколькими программистами, упрощается разработка требований к ПО. \r\n6.	Уменьшаются накладные расходы на вызовы процедур, удешевляется эксплуатация ПО.\r\n', '2'),
(10, 'Несколько классов имеют общие данные, но их формы поведения отличаются. Какой вариант лучше использовать?', '1.	Создайте общий объект, который можно было бы включить во все эти классы. \r\n2.	Сделайте эти классы производными от общего базового класса, определяющего общие данные.\r\n', '2'),
(11, 'Несколько классов имеют общие формы поведения, но их данные отличаются. Какой вариант лучше использовать?', '1.	Создайте общий объект, который можно было бы включить во все эти классы. \r\n2.	Сделайте эти классы производными от общего базового класса, определяющего общие методы.\r\n', '2'),
(12, 'Коэффициент объединения по входу (fan-in) для модуля – это число модулей, которые к нему обращаются. При условии, что этот модуль останется простым, выберите верный вариант:', '1.	Чем выше fan-in, тем лучше.\r\n2.	Чем ниже fan-in, тем лучше.\r\n3.	Высокие и низкие значения fan-in одинаково плохи - есть золотая середина, к которой надо стремиться.\r\n', '1'),
(13, 'Коэффициент разветвления по выходу (fan-out) для модуля – это число модулей, к которым модуль обращается. Выберите верный вариант:', '1.	Чем выше fan-out, тем лучше.\r\n2.	Чем ниже fan-out, тем лучше.\r\n3.	Высокие и низкие значения fan-out одинаково плохи - есть золотая середина, к которой надо стремиться.\r\n', '2'),
(14, 'Что имеет более высокий приоритет?', '1.	Удобство написания исходного кода класса.\r\n2.	Удобство интерфейса класса.\r\n', '2'),
(15, 'Класс User предназначен для работы с пользователями. Добавлением пользователя занимается отдельный метод. Как лучше его назвать?', '1.	AddNewRecordInUserTable()\r\n2.	AddNew()\r\n3.	AddNewUser()\r\n4.	AddUser()\r\n5.	Add()', '4'),
(16, 'Как лучше всего упорядочить обязательные параметры функции/метода?', '1.	Сначала идут входные параметры, потом выходные.\r\n2.	Сначала идут выходные параметры, потом входные.\r\n3.	В любом порядке - нет никаких правил на этот счет.', '1'),
(17, 'Какой из перечисленных способов обработки ошибок лучше всего выбрать в видеопроигрывателе, если часть видеокадра оказалась поврежденной?', '1.	Прекратить выполнение.\r\n2.	Вернуть соседнее значение.\r\n3.	Вернуть нейтральное значение.\r\n4.	Подставить ближайшее допустимое значение.', '4'),
(18, 'Какой из перечисленных способов обработки ошибок лучше всего выбрать в программе, управляющей установкой дозы облучения в рентгеновском аппарате?', '1.	Прекратить выполнение.\r\n2.	Вернуть соседнее значение.\r\n3.	Вернуть нейтральное значение.\r\n4.	Подставить ближайшее допустимое значение.', '1'),
(19, 'Для работы с полученными извне непроверенными данными используются так называемые баррикады – классы/функции, отвечающие за очистку данных от ошибок. Какое из утверждений верно:', '1.	Исключения (try-catch) лучше использовать внутри баррикад, а утверждения (assert) – снаружи баррикад.\r\n2.	Исключения (try-catch) лучше использовать снаружи баррикад, а утверждения (assert) – внутри баррикад.\r\n3.	И снаружи, и внутри баррикад лучше всего использовать исключения (try-catch).\r\n4.	И снаружи, и внутри баррикад лучше всего использовать утверждения (assert).', '2'),
(20, 'Принцип программирования DRY означает:', '1.	Чем проще, тем лучше. Не нужно усложнять там, где в этом нет необходимости. \r\n2.	Старайтесь избегать повторений (кода и данных).\r\n3.	Реализовывайте только необходимые функции и откажитесь от избыточного функционала.\r\n', '2'),
(21, 'Принцип программирования KISS означает:', '1.	Чем проще, тем лучше. Не нужно усложнять там, где в этом нет необходимости. \r\n2.	Старайтесь избегать повторений (кода и данных).\r\n3.	Реализовывайте только необходимые функции и откажитесь от избыточного функционала.\r\n', '1'),
(22, 'Принцип программирования YAGNI означает:', '1.	Чем проще, тем лучше. Не нужно усложнять там, где в этом нет необходимости. \r\n2.	Старайтесь избегать повторений (кода и данных).\r\n3.	Реализовывайте только необходимые функции и откажитесь от избыточного функционала.\r\n', '3'),
(23, 'Аббревиатура CRUD относится к:', '1.	Защитному программированию.\r\n2.	Венгерской нотации.\r\n3.	Функциональной полноте.', '3'),
(24, 'Вложенность if:', '1.	Чем больше, тем хуже.\r\n2.	Чем больше, тем лучше.', '1'),
(25, 'Резюмирующие комментарии должны:', '1.	Содержать объяснения на уровне команд и операторов (КАК делается).\r\n2.	Содержать объяснения на более высоком уровне абстракции (ДЛЯ ЧЕГО, ПОЧЕМУ делается).\r\n', '2'),
(26, 'Выберите пункт, в котором перечислены виды комментариев по содержанию:', '1.	Комментарии в конце строки,  маркер в коде, многострочные комментарии, резюме кода.\r\n2.	Объяснение кода, маркер в коде, резюме кода, описание цели кода, информация, которую невозможно выразить в форме кода.\r\n3.	Однострочные комментарии, описание цели кода, комментарии в начале строки, объяснение кода.\r\n', '2'),
(27, 'Что важнее?', '1.	Легкость чтения исходного кода.\r\n2.	Удобство написания исходного кода.', '1'),
(28, 'Что важнее?', '1.	Удобство написания исходного кода функции/метода.\r\n2.	Легкость использования функции/метода.', '2'),
(29, 'Выберите вариант, в котором правильно указаны цели рефакторинга кода:', '1.	Увеличение производительности, облегчение понимания.\r\n2.	Облегчение понимания, упрощение модификаций.\r\n3.	Расширение функциональности, упрощение модификаций.\r\n4.	Упрощение модификаций, увеличение производительности.', '1'),
(30, 'Аббревиатура MVC в шаблонах проектирования расшифровывается как:', '1.	Model-Virtual-Container.\r\n2.	Main-Virtual-Class.\r\n3.	Multifunction-Virtual-Class.\r\n4.	Multitasking-Virtual-Controller.\r\n5.	Model-View-Controller.\r\n6.	Multiuser-Value-Command.\r\n', '5');

-- --------------------------------------------------------

--
-- Структура таблицы `quest_a9b80079c385951b21c1c5c6de24f0252d2417e5`
--

CREATE TABLE `quest_a9b80079c385951b21c1c5c6de24f0252d2417e5` (
  `id` int NOT NULL,
  `question` varchar(300) DEFAULT NULL,
  `answers` varchar(1000) DEFAULT NULL,
  `apply` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Дамп данных таблицы `quest_a9b80079c385951b21c1c5c6de24f0252d2417e5`
--

INSERT INTO `quest_a9b80079c385951b21c1c5c6de24f0252d2417e5` (`id`, `question`, `answers`, `apply`) VALUES
(1, 'Выберите верное утверждение:', '1.	Тестирование является частью контроля качества ПО.\r\n2.	Контроль качества ПО является частью тестирования.', '1'),
(2, 'Выберите пункты, которые можно отнести к целям тестирования:', '1. Обнаружение дефектов.\r\n2. Повышение уверенности в уровне качества.\r\n3. Предоставление информации для принятия решений в области качества ПО.\r\n4. Повышение прибыльности компании.\r\n5. Предотвращение дефектов.\r\n6. Придание компании солидности в глазах заказчиков.\r\n7. Все вышеперечисленные пункты.\r\n8. Пункты 1, 2, 3, 5.\r\n9. Пункты 1, 2.\r\n10. Пункты 1, 2, 5.\r\n', '8'),
(3, 'Выберите верное утверждение:', '1.	Работа тестировщиков начинается после того, как программисты напишут исходный код.\r\n2.	Тестирование должно начинаться как можно раньше – еще на этапе разработки требований.\r\n3.	Тестировщики начинают работать после готовности проектного решения: пока программисты на основе проекта пишут программы, тестировщики пишут тесты для этих программ.\r\n', '3'),
(4, 'Выберите верное утверждение:', '1.	Тестирование охватывает только исполняемый код.\r\n2.	Тестирование охватывает исполняемый и исходный код.\r\n3.	Тестирование охватывает исполняемый код, исходный код и проектные решения.\r\n4.	Тестирование охватывает исполняемый код, исходный код, проектные решения и требования к программе.\r\n', '4'),
(5, 'Сравните тестирование и отладку программы:', '1.	Отладка и тестирование программы – это синонимы.\r\n2.	В отличие от тестирования отладка включает в себя не только выявление дефектов, но и их локализацию.\r\n3.	В отличие от тестирования отладка помимо выявления дефектов включает в себя их локализацию и устранение.\r\n', '3'),
(6, 'Выберите верное утверждение:', '1.	Хорошее тестирование доказывает, что дефектов в программе нет.\r\n2.	Цель тестирования – 100% проверка ПО.\r\n3.	Критерий эффективности работы тестировщика – количество найденных им дефектов.\r\n4.	Ни одно из перечисленных выше утверждений не является верным.\r\n', '4'),
(7, 'В тестировании ошибка – это:', '1.	Действие человека, которое приводит к неправильному результату.\r\n2.	Изъян в компоненте или системе, который может привести компонент или систему к невозможности выполнить требуемую функцию.\r\n3.	Отклонение компонента или системы от ожидаемого выполнения, эксплуатации или результата.\r\n', '1'),
(8, 'В тестировании сбой/отказ – это:', '1.	Действие человека, которое приводит к неправильному результату.\r\n2.	Изъян в компоненте или системе, который может привести компонент или систему к невозможности выполнить требуемую функцию.\r\n3.	Отклонение компонента или системы от ожидаемого выполнения, эксплуатации или результата.\r\n', '2'),
(9, 'В тестировании дефект – это:', '1.	Действие человека, которое приводит к неправильному результату.\r\n2.	Изъян в компоненте или системе, который может привести компонент или систему к невозможности выполнить требуемую функцию.\r\n3.	Отклонение компонента или системы от ожидаемого выполнения, эксплуатации или результата.\r\n', '3'),
(10, 'Какие пункты можно отнести к дефектам:', '1.	Некорректная работа программы.\r\n2.	Недостаток функциональности.\r\n3.	Неприемлемая производительность программы.\r\n4.	Неудобный интерфейс.\r\n5.	Плохой дизайн.\r\n6.	«Грязный» исходный код, ухудшающий его сопровождаемость.\r\n7.	Орфографическая ошибка в документации.\r\n8.	Все вышеперечисленные пункты.\r\n9.	Пункты 1-3.\r\n10.	Пункты 1-5.', '8'),
(11, 'Выберите пункт, в котором указано нетестируемое требование:', '1.	Программа должна быстро запускаться.\r\n2.	Время отклика программы должно находиться в приемлемых рамках.\r\n3.	Программа должна иметь дружественный интерфейс.\r\n4.	Тестер должен позволять пользователю легко подключать дополнительные компоненты, в том числе импульсный генератор, вольтметр, измеритель емкости и нестандартные тестовые платы.\r\n5.	Все вышеперечисленные требования являются нетестируемыми.', '5'),
(12, 'При негативном тестировании:', '1.	Все данные корректны.\r\n2.	Все данные некорректны.\r\n3.	Обязательно должны быть как корректные, так и некорректные данные.\r\n4.	Среди данных хотя бы часть должна быть некорректной.', '4'),
(13, 'Если тестировщик пытается ввести символьные данные в числовое поле, то это:', '1.	Позитивное тестирование.\r\n2.	Негативное тестирование.\r\n3.	Тестирование удобства интерфейса пользователя.\r\n4.	Стрессовое тестирование.\r\n', '2'),
(14, 'Какое тестирование выполняется первым:', '1.	Позитивное.\r\n2.	Негативное.', '1'),
(15, 'Регрессионное тестирование - это:', '1.	Тестирование еще не тестированной программы.\r\n2.	Тестирование уже протестированной программы.\r\n3.	Тестирование программы сторонними организациями. \r\n4.	Тестирование программы собственными силами компании.', '2'),
(16, 'Стрессовое тестирование, объемное тестирование, тестирование стабильности/надежности относятся к:', '1.	Тестированию производительности.\r\n2.	Тестированию безопасности.\r\n', '1'),
(17, 'Тестирование пользовательского интерфейса и тестирование удобства использования (usability):', '1.	Это синонимы.\r\n2.	Это совершенно разные направления в тестировании.\r\n3.	Тестирование удобства использования является частью тестирования пользовательского интерфейса.\r\n4.	Тестирование пользовательского интерфейса является частью тестирования удобства использования.\r\n', '2'),
(18, 'У вас есть родительский класс Parent с методами Inherit() и Redefine() и есть дочерний класс Daughter, в котором метод Inherit() не тронут, а метод Redefine() переопределен. Какое из утверждений является верным:', '1.	В родительском классе надо протестировать оба метода, а в дочернем классе их можно не тестировать, т.к. дочерний класс наследуется от родительского.\r\n2.	В дочернем классе надо протестировать оба метода, а в родительском классе можно ничего не тестировать, т.к. дочерний класс является более детализированным и поэтому его тестирования будет достаточно. \r\n3.	В родительском классе надо протестировать оба метода, а в дочернем классе можно протестировать только метод Redefine(), т.к. метод Inherit() наследуется от родителя, а у родителя работа этого метода тестируется.\r\n4.	И в родительском, и в дочернем классе надо протестировать оба метода.', '4'),
(19, 'К какому виду тестирования относится инспекция исходного кода программы:', '1.	К динамическому тестированию.\r\n2.	К статическому тестированию.', '2'),
(20, 'У вас есть сторонняя динамическая библиотека (DLL) без исходных текстов и документация по ее интерфейсу. Какое тестирование вы можете провести?', '1.	Тестирование только методом черного ящика.\r\n2.	Тестирование только методом белого ящика.\r\n3.	Тестирование методами черного и белого ящиков.', '1'),
(21, 'Правильно расположите виды тестирования по возрастанию их уровня:', '1.	Системное тестирование, модульное тестирование, интеграционное тестирование.\r\n2.	Системное тестирование, интеграционное тестирование, модульное тестирование.\r\n3.	Модульное тестирование, интеграционное тестирование, системное тестирование.', '3'),
(22, 'Восходящее тестирование - это:', '1.	Подход к интеграционному тестированию, в котором в первую очередь тестируются низкоуровневые компоненты, после чего процесс переходит на всё более и более высокоуровневые компоненты.\r\n2.	Подход к интеграционному тестированию, в котором в первую очередь тестируются высокоуровневые компоненты, после чего процесс переходит на всё более и более низкоуровневые компоненты.\r\n', '1'),
(23, 'Статическое тестирование - это:', '1.	Тестирование с запуском кода на исполнение.\r\n2.	Тестирование без запуска кода на исполнение.', '2'),
(24, 'Набор входных данных, условий выполнения и ожидаемых результатов, разработанный с целью проверки того или иного свойства или поведения программного средства - это:', '1.	Тест-кейс.\r\n2.	Тест.\r\n3.	Тест-план.\r\n4.	Чек-лист.', '1'),
(25, 'Тест-план – это:', '1.	Набор входных данных, условий выполнения и ожидаемых результатов, разработанный с целью проверки того или иного свойства или поведения программного средства.\r\n2.	Документ, описывающий и регламентирующий перечень работ по тестированию, а также соответствующие техники и подходы, стратегию, области ответственности, ресурсы, расписание и ключевые даты.\r\n3.	Документ, обобщающий результаты работ по тестированию.', '2'),
(26, 'Тестирование критического пути - это:', '1.	Тестирование, направленное на проверку всего приложения как единого целого, собранного из частей, проверенных на стадиях модульного и интеграционного тестирования.\r\n2.	Тестирование, направленное на исследование приложения в ситуации, когда все действия выполняются строго по инструкции без каких бы то ни было ошибок, отклонений, ввода неверных данных и т.д.\r\n3.	Тестирование, направленное на исследование функциональности, используемой типичными пользователями в типичной повседневной деятельности.\r\n', '2'),
(27, 'Тестирование, которое выполняется внутри организации-разработчика с возможным частичным привлечением конечных пользователей – это:', '1.	Альфа-тестирование.\r\n2.	Бета-тестирование.\r\n', '1'),
(28, 'Инспекция (аудит) кода – это:', '1.	Семейство техник повышения качества кода за счёт того, что в процессе создания или совершенствования кода участвуют несколько человек.\r\n2.	Тестирование, которое выполняется вне организации-разработчика с активным привлечением конечных пользователей/заказчиков.\r\n3.	Формализованное тестирование, направленное на проверку приложения с точки зрения конечного пользователя/заказчика и вынесения решения о том, принимает ли заказчик работу у исполнителя (проектной команды).\r\n', '1'),
(29, 'Процесс анализа программного средства и сопутствующей документации с целью выявления дефектов и повышения качества продукта - это:', '1.	Ручное тестирование.\r\n2.	Системное тестирование.\r\n3.	Тестирование программного обеспечения.', '3'),
(30, 'Программа имеет 2 входных параметра типа int размерностью 32 бита. Тестировщик решил провести исчерпывающее тестирование путем перебора всех возможных комбинаций входных параметров. Если перебирать 1 млрд. вариантов в секунду, то понадобится:', '1.	От 1 года до 10 лет.\r\n2.	От 10 до 100 лет.\r\n3.	Свыше 100 лет.\r\n', '3');

-- --------------------------------------------------------

--
-- Структура таблицы `quest_c6e989c4f27eee03bca7a81482b37ffcccb7fdcd`
--

CREATE TABLE `quest_c6e989c4f27eee03bca7a81482b37ffcccb7fdcd` (
  `id` int NOT NULL,
  `question` varchar(300) DEFAULT NULL,
  `answers` varchar(1000) DEFAULT NULL,
  `apply` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Дамп данных таблицы `quest_c6e989c4f27eee03bca7a81482b37ffcccb7fdcd`
--

INSERT INTO `quest_c6e989c4f27eee03bca7a81482b37ffcccb7fdcd` (`id`, `question`, `answers`, `apply`) VALUES
(1, 'Выберите вариант, в котором перечислены основные заинтересованные стороны при разработке ПО:', '1.	Исполнитель, пользователь, заказчик.\r\n2.	Наблюдатель, заказчик, исполнитель.\r\n3.	Заказчик, страховщик, исполнитель.\r\n4.	Пользователь, наблюдатель, исполнитель.\r\n5.	Страховщик, заказчик, исполнитель.', ''),
(2, 'Выберите пункт, который НЕ относится к характеристикам требований («требования к требованиям»):', '1.	Реализуемость.\r\n2.	Окупаемость.\r\n3.	Тестируемость.\r\n4.	Недвусмысленность.\r\n5.	Непротиворечивость.\r\n6.	Полнота.\r\n7.	Необходимость.', ''),
(3, 'Какое из этих требований относится к функциональным требованиям?', '1.	Производительность не менее 100 измерений в секунду.\r\n2.	ПО должно работать в ОС Windows.\r\n3.	Показ осциллограмм.', '1'),
(4, 'Какое из этих требований относится к нефункциональным требованиям?', '1.	Автоматическое создание резервной копии документа при его открытии.\r\n2.	ПО должно работать в ОС Windows версии 7 и выше.\r\n3.	Сохранение конфигурации программы в файл.', '2'),
(5, 'Отраслевые стандарты относятся к:', '1.	Бизнес-правилам.\r\n2.	Бизнес-требованиям.\r\n3.	Пользовательским требованиям.\r\n4.	Системным требованиям', '1'),
(6, 'Требование «Должна быть возможность сохранить параметры сделанного запроса к базе данных, чтобы использовать их в дальнейшем» относится к:', '1.	Бизнес-правилам.\r\n2.	Бизнес-требованиям.\r\n3.	Пользовательским требованиям.\r\n4.	Системным требованиям.\r\n', '3'),
(7, 'Требование «Программа должна работать на компьютере с оперативной памятью 1 Гбайт и выше» относится к:', '1.	Бизнес-правилам.\r\n2.	Бизнес-требованиям.\r\n3.	Пользовательским требованиям.\r\n4.	Системным требованиям.\r\n', '4'),
(8, 'К какому типу требований относятся требования к техническим ресурсам, необходимым команде разработчиков? ', '1.	Требования к проекту.\r\n2.	Требования к продукту.', '1'),
(9, 'К какому типу требований относится требование аутентификации пользователей, работающих с программой?', '1.	Требования к проекту.\r\n2.	Требования к продукту.', '2'),
(10, 'К какому типу требований относится требование обеспечить время ответа программы 3 секунды при 100 одновременно работающих пользователях?', '1.	Требования к проекту.\r\n2.	Требования к продукту.', '2'),
(11, 'К какому этапу относится проверка задокументированных требований для устранения всех недостатков до принятия требований группой разработки?', '1.	Выявление и сбор требований.\r\n2.	Анализ собранных требований. \r\n3.	Документирование требований.\r\n4.	Утверждение требований.', '4'),
(12, 'К какому этапу относится декомпозиция высокоуровневых требований до нужного уровня детализации?', '1.	Выявление и сбор требований.\r\n2.	Анализ собранных требований. \r\n3.	Документирование требований.\r\n4.	Утверждение требований.', '2'),
(13, 'К какому этапу относится изучение среды, в которой будет использоваться новый продукт?', '1.	Выявление и сбор требований.\r\n2.	Анализ собранных требований. \r\n3.	Документирование требований.\r\n4.	Утверждение требований.', '1'),
(14, 'К какому этапу относится выведение функциональных требований из информации других требований?', '1.	Выявление и сбор требований.\r\n2.	Анализ собранных требований. \r\n3.	Документирование требований.\r\n4.	Утверждение требований.', '2'),
(15, 'К какому этапу относится работа с отдельными людьми, которые представляют каждый класс пользователей, чтобы понять их потребности и ожидания в отношении качества?', '1.	Выявление и сбор требований.\r\n2.	Анализ собранных требований. \r\n3.	Документирование требований.\r\n4.	Утверждение требований.\r\n', '1'),
(16, 'К какому этапу относится распределение требований по компонентам ПО, определенным в системной архитектуре?', '1.	Выявление и сбор требований.\r\n2.	Анализ собранных требований. \r\n3.	Документирование требований.\r\n4.	Утверждение требований.', '2'),
(17, 'К какому этапу относится выявление пробелов в требованиях или излишних требований, не соответствующих заданным рамкам?', '1.	Выявление и сбор требований.\r\n2.	Анализ собранных требований. \r\n3.	Документирование требований.\r\n4.	Утверждение требований.', '2'),
(18, 'Является ли обязательным определение всех без исключения требований до начала проектирования?', '1.	Да.\r\n2.	Нет.', '2'),
(19, 'Кто из аналитиков занимается анализом требований и документов по существующим бизнес-процессам?', '1.	Бизнес-аналитик.\r\n2.	Системный аналитик.', ''),
(20, 'Кто из аналитиков занимается вопросом, как реализовать бизнес-требования?', '1.	Бизнес-аналитик.\r\n2.	Системный аналитик.	\r\n', ''),
(21, 'Выберите пункт, который НЕ относится к методам выявления требований при работе с людьми:', '1.	Интервью.\r\n2.	Анализ системных интерфейсов.\r\n3.	Семинар.\r\n4.	Анализ документов.\r\n5.	Фокус-группы.\r\n6.	Наблюдение.\r\n7.	Опросные листы.', '2'),
(22, 'Выберите пункт, который относится к методам выявления требований при работе с людьми:', '1.	Анализ системных интерфейсов.\r\n2.	Анализ документации.\r\n3.	Семинар.\r\n4.	Анализ пользовательского интерфейса.', '3'),
(23, 'Выберите признак, по которому нельзя делать вывод, что сбор требований подошел к концу:', '1.	Пользователи утверждают, что рассказали всё, что относится к требованиям.\r\n2.	Пользователи уже не могут придумать новых вариантов использования или пользовательских историй.\r\n3.	Пользователи предлагают новые варианты использования, однако они не приводят к появлению новых функциональных требований.\r\n4.	Разработчики и тестировщики, проверяющие требования, задают очень мало вопросов.\r\n', '1'),
(24, 'Приоритизация MoSCoW. К какому классу относится требование, которое в этот раз реализовываться не будет, но может быть включено в будущий выпуск?', '1.	Must have (Должен иметь).\r\n2.	Should have (Следовало бы иметь).\r\n3.	Could have (Может иметь).\r\n4.	Would like (Хотелось бы иметь).', '4'),
(25, 'Приоритизация MoSCoW. К какому классу относится требование, которое важно и по возможности должно быть включено в решение, но оно не является условием успеха решения?', '1.	Must have (Должен иметь).\r\n2.	Should have (Следовало бы иметь).\r\n3.	Could have (Может иметь).\r\n4.	Would like (Хотелось бы иметь).', '2'),
(26, 'Приоритизация MoSCoW. К какому классу относится требование, которое желательно, но не необходимо, поэтому его можно отложить, а реализовать в текущем выпуске ПО, только если позволяют время и ресурсы?', '1.	Must have (Должен иметь).\r\n2.	Should have (Следовало бы иметь).\r\n3.	Could have (Может иметь).\r\n4.	Would like (Хотелось бы иметь).', '3'),
(27, 'Приоритизация MoSCoW. К какому классу относится требование, которое должно быть удовлетворено, чтобы решение было успешным?', '1.	Must have (Должен иметь).\r\n2.	Should have (Следовало бы иметь).\r\n3.	Could have (Может иметь).\r\n4.	Would like (Хотелось бы иметь).', '1'),
(28, 'Какое из действий относится не к разработке, а к управлению требованиями?', '1.	Обновление планов проекта в соответствии с изменениями в требованиях.\r\n2.	Определение классов ожидаемых пользователей продукта и других заинтересованных лиц.\r\n3.	Изучение среды, в которой будет использоваться новый продукт.', '1'),
(29, 'Какие из действий относятся не к разработке, а к управлению требованиями?', '1.	Распределение требований по компонентам ПО, определенным в системной архитектуре.\r\n2.	Определение отношений и зависимостей, существующих между требованиями.\r\n3.	Работа с отдельными людьми, которые представляют каждый класс пользователей, чтобы понять их потребности и ожидания в отношении качества.\r\n', '2'),
(30, 'Какие из действий относятся не к разработке, а к управлению требованиями?', '1.	Выведение функциональных требований из информации других требований.\r\n2.	Изучение среды, в которой будет использоваться новый продукт.\r\n3.	Отслеживание состояния требований и действий по изменению на протяжении всего проекта.\r\n', '3');

-- --------------------------------------------------------

--
-- Структура таблицы `quest_csharp`
--

CREATE TABLE `quest_csharp` (
  `id` int NOT NULL,
  `question` varchar(200) COLLATE utf8_unicode_ci NOT NULL,
  `answers` varchar(500) COLLATE utf8_unicode_ci NOT NULL,
  `apply` varchar(500) COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `quest_csharp`
--

INSERT INTO `quest_csharp` (`id`, `question`, `answers`, `apply`) VALUES
(2, 'Какой способ вызова исключения является корректным?', 'Exception();\r\ncall new Exception();\r\nthrow new Exception();\r\ncall Exception();\r\nthrow Exception();\r\nnew Exception();', '3'),
(3, 'Класс Exception', 'имеет фиксированное число потомков\r\nявляется абстрактным классом\r\nявляется родительским классом для всех классов, описывающих определенный тип исключения\r\n\r\n\r\n', '3'),
(4, 'Что не является частью  .Net framework:', 'Общеязыковая исполняющая среда (CLR)\r\nОперационная система (OS)\r\nБиблиотека классов  .Net фреймворка (Framework Class Library)', '2'),
(8, 'Какое имя переменных является подходящими для языка C#', '1.	2Star\r\n2.	Bad_var\r\n3.	#PersonNAme@', '2'),
(9, 'Укажите возможный тип переменной а: a = false', 'bool\r\ndouble\r\nint\r\nstring', '1'),
(10, 'Что делает модификатор sealed?', 'Запрещает наследование\r\nДобавляется просто для наглядности, но ничего не изменяет\r\nОграничивает видимость текущей сборкой\r\nРазрешает наследование только один раз	', '1'),
(11, 'Что такое куча?', 'Это структура данных\r\nИменованная область памяти\r\nОбласть динамической памяти\r\nКуча переменных	\r\n', '3'),
(12, 'Функция с побочным эффектом:', 'изменяет значения аргументов, вызываемых по значению\r\nвызывается как оператор\r\nвозвращает значение void	\r\nимеет выходные аргументы с ключевыми словами ref или out', '4'),
(13, 'Отметьте истинное высказывание:', 'каждая case-ветвь оператора switch должна заканчиваться оператором break\r\nлюбое выражение может использоваться в качестве оператора\r\nоператор foreach не применим при работе с массивами\r\nнет правильных ответов', '4'),
(14, 'К неявным преобразованиям относятся:', 'преобразования, выполняемые автоматически\r\nлюбые преобразования над объектами ссылочных типов\r\nпреобразования, указанные программистом', '1'),
(15, 'Что делает оператор «%»', 'Ни чего из выше перечисленного\r\nВозвращает тригонометрическую функцию\r\nВозвращает процент от суммы\r\nВозвращает остаток от деления	', '4'),
(16, 'Какой тип переменной используется в коде: int a = 5', 'Знаковое 32-бит целое\r\nЗнаковое 64-бит целое	\r\nЗнаковое 8-бит целое', '1'),
(17, 'Инкремент и декремент являются унарными операторами', 'Да\r\nНет', '1'),
(18, 'Как сделать инкрементацию числа', '\"%%\"\r\n\"--\"\r\n\"!=\"\r\n\"++\"', '4'),
(19, 'Преобразование к типу object', 'всегда возможно и выполняется автоматически\r\nвозможно только для объектов ссылочного типа\r\nвозможно, но требует явного задания преобразования', '1'),
(20, 'Чем отличается значимый тип от ссылочного типа', 'Значимый тип не может быть равен null	\r\nЗначимый тип не может представлять собой сложную структуру\r\n', '2'),
(21, 'Можно ли сделать перегрузку операторов true и false?', 'Да\r\nНет\r\n', '1'),
(22, 'Что будет содержать строка name после выполнения данного кода? string name = \"Alexey\"; name[1] = \".\";	', '\".lexey\"\r\n\"Alexey\"\r\nВозникнет ошибка\r\n\"A.exey\"\r\n', '3'),
(23, 'Что будет выведено на консоль? Console.WriteLine(11 / 2);', '6\r\n5\r\n5.5\r\n', '2'),
(24, 'Можно ли сделать перегрузку оператора присваивания?', 'Да\r\nНет\r\n', '2'),
(25, 'Что будет находиться в переменной name? int? a = null; string name = a == null ? \"Artur\" : \"Vasya\";', '\"Artur\"\r\nnull\r\nВозникнет ошибка\r\nString.Empty\r\n\"Vasya\"	\r\n', '1'),
(26, 'Выполнится ли блок finally, если исключения не было?', 'Да\r\nЗависит от режима работы\r\nЗависит от кода\r\nНет\r\n', '1'),
(27, 'C# код компилируется в код …', 'CIL\r\nMASM\r\nFCL\r\nCLI\r\n', '1'),
(28, 'Что делает модификатор partial?', 'Ограничивает видимость текущим классом\r\nЗапрещает наследование\r\nПозволяет использовать неуправляемый код	\r\nПозволяет разделять сущность на несколько частей\r\n', '4'),
(29, 'Можно ли реализовать несколько интерфейсов в одном классе?', 'Да\r\nНет\r\n', '1'),
(30, 'Что будет выведено на консоль? bool isValid = 1;	 Console.WriteLine(isValid);', '1\r\nВозникнет ошибка\r\nfalse\r\ntrue\r\n', '2'),
(31, 'Верно ли, что тип string хранит набор символов Unicode?', 'Да\r\nНет', '1'),
(32, 'Структура — это …', 'Ссылочный тип\r\nЗначимый тип\r\n', '2'),
(33, 'Допускается ли множественное наследование в C#', 'Нет\r\nДа\r\n', '1');

-- --------------------------------------------------------

--
-- Структура таблицы `quest_f1b0a72eb7d8f95e35c442375a96d7457b642cc9`
--

CREATE TABLE `quest_f1b0a72eb7d8f95e35c442375a96d7457b642cc9` (
  `id` int NOT NULL,
  `question` varchar(300) DEFAULT NULL,
  `answers` varchar(1000) DEFAULT NULL,
  `apply` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Дамп данных таблицы `quest_f1b0a72eb7d8f95e35c442375a96d7457b642cc9`
--

INSERT INTO `quest_f1b0a72eb7d8f95e35c442375a96d7457b642cc9` (`id`, `question`, `answers`, `apply`) VALUES
(1, 'Проект - это:', '1.	Любое предприятие, направленное на создание уникального продукта, услуги или результата.\r\n2.	Временное предприятие, направленное на создание любого продукта, услуги или результата.\r\n3.	Временное предприятие, направленное на создание уникального продукта, услуги или результата.\r\n', '3'),
(2, 'Проект может создавать:', '1.	Продукт.\r\n2.	Услугу или способность предоставлять услугу.\r\n3.	Улучшение существующей линейки продуктов или услуг.\r\n4.	Результат (например, новые знания).\r\n5.	Пункты 1 и 2.\r\n6.	Пункты 1-3.\r\n7.	Пункты 1-4.', '7'),
(3, 'Эксплуатация разработанной программы - это:', '1.	Проектная работа.\r\n2.	Операционная работа.\r\n', '2'),
(4, 'Выберите пункты, которые входят в проектный треугольник: ', '1.	Время.\r\n2.	Cтоимость.\r\n3.	Объем работ.\r\n4.	Диаграмма Гантта.\r\n5.	Проект.\r\n6.	1, 2, 4.\r\n7.	1, 4, 5.\r\n8.	1, 2, 3.\r\n9.	1, 2, 5.', '8'),
(5, 'Приоритет проекта определяется на основе оценки характеристик:', '1.	Финансовая ценность.\r\n2.	Стратегическая ценность.\r\n3.	Уровень рисков.\r\n4.	Пункты 1 и 2.\r\n5.	Пункты 1-3.', '5'),
(6, 'Цели проекта отвечают на вопрос:', '1.	Зачем нужен проект?\r\n2.	Что должно быть получено после завершения проекта?\r\n3.	Все вышеперечисленное.', '1'),
(7, 'Результаты проекта отвечают на вопрос:', '1.	Зачем нужен проект?\r\n2.	Что должно быть получено после завершения проекта?\r\n3.	Все вышеперечисленное.', '2'),
(8, 'Выберите пункт, который относится к допущениям проекта:', '1.	Срок окончания проекта – 20 октября 2020 года.\r\n2.	Программа должна быть разработана для СУБД MySQL.\r\n3.	Стоимость лицензий на стороннее ПО не изменится до завершения проекта.\r\n4.	Стоимость проекта – не более 10 млн. рублей.', '3'),
(9, 'Заказчик проекта – это лица или организации:', '1.	Которые будут пользоваться продуктом, услугой или результатом проекта.\r\n2.	Которые будут платить за продукт, услугу или результат проекта.\r\n3.	На которых могут повлиять результаты проекта.', '1'),
(10, 'Куратор проекта - это:', '1.	Лицо, назначенное исполняющей организацией руководить командой и отвечающее за достижение целей проекта.\r\n2.	Сторонняя компания, заключившая договор на предоставление компонентов или услуг, необходимых для проекта.\r\n3.	Представитель исполнителя, уполномоченный принимать решение о выделении ресурсов и изменениях в проекте.\r\n', '3'),
(11, 'Выберите пункт, который НЕ относится к ресурсам проекта:', '1.	Люди (персонал и его квалификация).\r\n2.	Оборудование.\r\n3.	Расходные материалы.\r\n4.	Лицензии на ПО.\r\n5.	Законы в области деятельности исполнителя.\r\n6.	Помещения.', '5'),
(12, 'Контрольные точки (события) в проекте – это:', '1.	Важные моменты или события в расписании проекта, отмечающие достижение заданного результата и/или начало/завершение определенного объема работы.\r\n2.	Календарные даты, расставленные с заданной периодичностью (неделя, месяц, квартал).\r\n', '1'),
(13, 'Риск – это:', '1.	Негативное событие, которое повлияет на проект.\r\n2.	Любое событие, которое может произойти и повлиять на проект.\r\n3.	Негативное событие, которое может произойти и повлиять на проект.\r\n4.	Любое негативное событие, которое может произойти.', '2'),
(14, 'К важнейшим характеристикам риска относятся:', '1.	Тяжесть последствий и вероятность.\r\n2.	Только тяжесть последствий.\r\n3.	Только вероятность.', '1'),
(15, 'Выберите пункт, который не относится к типичным рискам любого проекта:', '1.	Изменение законодательства.\r\n2.	Нарушение сроков.\r\n3.	Нехватка или перерасход ресурсов. \r\n4.	Конечный результат не соответствует требованиям.', '1'),
(16, 'Идентификация рисков – это:', '1.	Выявление рисков, способных повлиять на проект, и документальное оформление их характеристик.\r\n2.	Выбор методов реагирования на выявленные риски.', '1'),
(17, 'Выберите пункт, который не относится к методам реагирования на риски:', '1.	Уклонение от риска.\r\n2.	Передача риска. \r\n3.	Снижение риска.\r\n4.	Принятие риска.\r\n5.	Страхование риска.', '5'),
(18, 'К какому методу реагирования на риск «Болезнь или увольнение работника» относится внедрение взаимозаменяемости работников:', '1.	Уклонение от риска.\r\n2.	Снижение риска. \r\n3.	Передача риска.', '2'),
(19, 'К какому методу реагирования на риск «Отказ заказчика от оплаты готового проекта» относится 100% предоплата проекта:', '1.	Уклонение от риска.\r\n2.	Принятие риска.\r\n3.	Передача риска.', '1'),
(20, 'К какому методу реагирования на риск «Подорожание лицензий на стороннее ПО, устанавливаемое у заказчика в рамках реализации проекта» относится внесение в договор пункта, что стороннее ПО оплачивает заказчик:', '1.	Уклонение от риска.\r\n2.	Снижение риска.\r\n3.	Передача риска.', '3'),
(21, 'К какому методу реагирования на риск «Несвоевременная сдача проекта» относится планирование с некоторым запасом длительности этапов выполнения проекта:', '1.	Уклонение от риска.\r\n2.	Снижение риска.\r\n3.	Передача риска.', '2'),
(22, 'Выберите варианты декомпозиции, которые могут применяться для составления иерархической структуры работ проекта:', '1.	По фазам жизненного цикла (анализ, проектирование и т.д.).\r\n2.	По ключевым результатам проекта.\r\n3.	По подпроектам.\r\n4.	Пункты 1 и 3.\r\n5.	Пункты 2 и 3.\r\n6.	Пункты 1, 2 и 3.', '6'),
(23, 'Выберите вариант, в котором правильно указана последовательность стадий разработки согласно ГОСТ 19.102-77:', '1.	Эскизный проект, технический проект, рабочий проект.\r\n2.	Технический проект, эскизный проект, рабочий проект.\r\n3.	Эскизный проект, рабочий проект, технический проект.', '1'),
(24, 'Диаграмма Гантта – это:', '1.	Диаграмма, показывающая количество сделанной и оставшейся работы.\r\n2.	Горизонтальная столбчатая диаграмма с временной шкалой, которая используется для иллюстрации плана работ по проекту с привязкой ко времени.\r\n3.	Графический способ определения наиболее существенных причинно-следственных взаимосвязей между факторами и последствиями в исследуемой ситуации или проблеме.\r\n', '2'),
(25, 'Базовое расписание – это:', '1.	План-график с указанными временными фазами проекта, контрольными точками и элементами иерархической структуры работ.\r\n2.	План-график с указанными временными фазами проекта и контрольными точками.\r\n3.	План работ в виде иерархической структуры без указания времени.', '1'),
(26, 'Критический путь проекта – это:', '1.	Самые последние работы в проекте перед его сдачей.\r\n2.	Самая короткая цепочка работ в проекте.\r\n3.	Самая длинная цепочка работ в проекте.', '3'),
(27, 'Критический путь в проекте:', '1.	Может быть только один.\r\n2.	Может быть несколько при условии, что работы в них не пересекаются.\r\n3.	Может быть несколько и разрешается, чтобы работы в них частично пересекались.\r\n', '1'),
(28, 'При какой организационной структуре работник имеет более одного непосредственного руководителя?', '1.	Функциональная.\r\n2.	Проектная.\r\n3.	Матричная.', '3'),
(29, 'В каком варианте совмещении функций имеет место конфликт интересов:', '1.	Руководитель проекта + системный аналитик.\r\n2.	Программист + тестировщик.\r\n3.	Системный аналитик + проектировщик интерфейса пользователя.', '2'),
(30, 'В каком варианте совмещении функций наименее вероятен конфликт интересов:', '1.	Системный архитектор + программист.\r\n2.	Руководитель проекта + программист.\r\n3.	Программист + технический писатель.', '1');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `list`
--
ALTER TABLE `list`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `news`
--
ALTER TABLE `news`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `quest_0cde0cef16bebfeb05386e593dd3f3bb8e12ae4a`
--
ALTER TABLE `quest_0cde0cef16bebfeb05386e593dd3f3bb8e12ae4a`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `quest_06e7f80ea22d9fab19566fac380defe7c9aba9ab`
--
ALTER TABLE `quest_06e7f80ea22d9fab19566fac380defe7c9aba9ab`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `quest_6bb09cdfe8f95a2d190e3afaf376c17310ab0842`
--
ALTER TABLE `quest_6bb09cdfe8f95a2d190e3afaf376c17310ab0842`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `quest_656d7bbadc0bfd839277a4e30f7e3b37a7b520f1`
--
ALTER TABLE `quest_656d7bbadc0bfd839277a4e30f7e3b37a7b520f1`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `quest_a9b80079c385951b21c1c5c6de24f0252d2417e5`
--
ALTER TABLE `quest_a9b80079c385951b21c1c5c6de24f0252d2417e5`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `quest_c6e989c4f27eee03bca7a81482b37ffcccb7fdcd`
--
ALTER TABLE `quest_c6e989c4f27eee03bca7a81482b37ffcccb7fdcd`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `quest_csharp`
--
ALTER TABLE `quest_csharp`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `quest_f1b0a72eb7d8f95e35c442375a96d7457b642cc9`
--
ALTER TABLE `quest_f1b0a72eb7d8f95e35c442375a96d7457b642cc9`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `list`
--
ALTER TABLE `list`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=30;

--
-- AUTO_INCREMENT для таблицы `news`
--
ALTER TABLE `news`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT для таблицы `quest_0cde0cef16bebfeb05386e593dd3f3bb8e12ae4a`
--
ALTER TABLE `quest_0cde0cef16bebfeb05386e593dd3f3bb8e12ae4a`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=32;

--
-- AUTO_INCREMENT для таблицы `quest_06e7f80ea22d9fab19566fac380defe7c9aba9ab`
--
ALTER TABLE `quest_06e7f80ea22d9fab19566fac380defe7c9aba9ab`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;

--
-- AUTO_INCREMENT для таблицы `quest_6bb09cdfe8f95a2d190e3afaf376c17310ab0842`
--
ALTER TABLE `quest_6bb09cdfe8f95a2d190e3afaf376c17310ab0842`
  MODIFY `id` int NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT для таблицы `quest_656d7bbadc0bfd839277a4e30f7e3b37a7b520f1`
--
ALTER TABLE `quest_656d7bbadc0bfd839277a4e30f7e3b37a7b520f1`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;

--
-- AUTO_INCREMENT для таблицы `quest_a9b80079c385951b21c1c5c6de24f0252d2417e5`
--
ALTER TABLE `quest_a9b80079c385951b21c1c5c6de24f0252d2417e5`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;

--
-- AUTO_INCREMENT для таблицы `quest_c6e989c4f27eee03bca7a81482b37ffcccb7fdcd`
--
ALTER TABLE `quest_c6e989c4f27eee03bca7a81482b37ffcccb7fdcd`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;

--
-- AUTO_INCREMENT для таблицы `quest_csharp`
--
ALTER TABLE `quest_csharp`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=34;

--
-- AUTO_INCREMENT для таблицы `quest_f1b0a72eb7d8f95e35c442375a96d7457b642cc9`
--
ALTER TABLE `quest_f1b0a72eb7d8f95e35c442375a96d7457b642cc9`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
